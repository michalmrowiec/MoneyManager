@page "/confirm-change-email"
@using Microsoft.AspNetCore.WebUtilities;
@using MoneyManager.Client.Services;
@using System.Net;
@using MoneyManager.Client.ViewModels;
@using System.IdentityModel.Tokens.Jwt;
@using Newtonsoft.Json;
@using System.Security.Claims;
@inject IHttpRecordService httpService
@inject NavigationManager navManager
@inject ILocalStorageService localStorage
@inject IAuthenticationService authenticationService
@inject AuthenticationState authenticationState
@inject ErrorMessage errorMessage
@inject NameOfSubpage nameOfSubpage

<h3>ConfirmChangeEmail</h3>

<div class="col-md-6 offset-md-3 mt-5">
    <div class="card">
        <h4 class="card-header">Confirm email change</h4>
        <div class="card-body">
            <EditForm Model="@_loginUserVM" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label>New email</label>
                    <InputText @bind-Value="_loginUserVM.Email" class="form-control" />
                    <ValidationMessage For="@(() => _loginUserVM.Email)" />
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <InputText @bind-Value="_loginUserVM.Password" type="password" class="form-control" />
                    <ValidationMessage For="@(() => _loginUserVM.Password)" />
                </div>
                <div class="d-flex justify-content-between">
                    <button class="btn btn-primary mt-2">
                        @if (_loading)
                        {
                            <span class="spinner-border spinner-border-sm mr-1"></span>
                        }
                        Login
                    </button>
                    <div class="my-auto">
                        <a href="/forgotpasswordemail">I forgot my password</a>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private bool _success = false;
    private string? _key;
    private LoginUserVM _loginUserVM = new LoginUserVM();
    private bool _loading;

    protected override async Task OnInitializedAsync()
    {
        await authenticationService.LogoutUser();
        Navigate();
    }

    private async void HandleValidSubmit()
    {
        _loading = true;
        try
        {
            var result = await httpService.UpdateItem(
                new { NewEmail = _loginUserVM.Email, Password = _loginUserVM.Password },
                $"/api/account/confirm-change-email?&keyConfirmingEmailChange={_key}");

            if (result.StatusCode == System.Net.HttpStatusCode.OK)
            {
                await authenticationService.LoginUserHelper(result);
                _success = true;
            }
        }
        catch (Exception ex)
        {
            errorMessage.Message = ex.Message;
            StateHasChanged();
        }

        _loading = false;
    }

    void Navigate()
    {
        var query = new Dictionary<string, string>();

        navManager.NavigateTo(QueryHelpers.AddQueryString(navManager.Uri, query));

        var uri = navManager.ToAbsoluteUri(navManager.Uri);

        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("keyConfirmingEmailChange", out var param))
        {
            _key = param.First();
        }
    }
}
