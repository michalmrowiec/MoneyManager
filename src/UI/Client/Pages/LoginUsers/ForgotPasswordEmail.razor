@page "/forgotpasswordemail"
@using MoneyManager.Client.Services;
@using MoneyManager.Client.Models.ViewModels;
@inject HttpClient http

<PageTitle>ForgotPassword</PageTitle>

<div class="col-md-6 offset-md-3 mt-5">
    <div class="card">
        <h4 class="card-header">Ender your email address</h4>
        <div class="card-body">
            <EditForm Model="@ForgotPassword" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label>Email</label>
                    <InputText @bind-Value="ForgotPassword.UserEmail" class="form-control" />
                </div>
                <button class="btn btn-primary">
@*                    @if (loading)
                    {
                        <span class="spinner-border spinner-border-sm mr-1"></span>
                    }*@
                    Register
                </button>
                @if (!string.IsNullOrEmpty(_errorMessage))
                {
                    <div class="alert alert-danger mt-3 mb-0">@_errorMessage</div>
                }
            </EditForm>
        </div>
    </div>
</div>



@*<label>Email</label>
<Input bind="@forgotPasswordEmail.UserEmail" type="email" class="form-control" />
<button class="btn btn-primary" onclick="@(async () => {await HandleValidSubmit();})">Register</button>*@

@if (_success)
{
    <p>Chack your email</p>
}
@*@if (!string.IsNullOrEmpty(_errorMessage))
{
    <div class="alert alert-danger mt-3 mb-0">@_errorMessage</div>
}*@

@code {
    public ForgotPasswordEmailVM ForgotPassword { get; set; } = new();
    private bool _success = false;
    private string? _errorMessage;

    private async void HandleValidSubmit()
    {
        try
        {
            var result = await http.PostAsJsonAsync("api/account/forgotpassword", ForgotPassword);

            if (result.StatusCode == System.Net.HttpStatusCode.OK)
            {
                _success = true;
                StateHasChanged();
            }
            else
            {
                _errorMessage = "Something went wrong.";
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            _errorMessage = ex.Message;
            StateHasChanged();
        }
    }
}
