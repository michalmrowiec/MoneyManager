@using MoneyManager.Client.Services
@using MoneyManager.Client.ViewModels
@using EnumsNET
@inherits LayoutComponentBase
@inject ILocalStorageService _localStorage
@inject AppState appState
@inject NameOfSubpage nameOfSubpage
@implements IDisposable

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="d-flex justify-content-between top-row px-4">
            <div class="d-none d-md-block">
                <h2 class="m-auto">@(((NamesOfSubpageEnum)nameOfSubpage.NamesOfSubpage).AsString(EnumFormat.Description))</h2>
            </div>
            <div class="d-md-none">
                <h4 class="m-auto">@(((NamesOfSubpageEnum)nameOfSubpage.NamesOfSubpage).AsString(EnumFormat.Description))</h4>
            </div>
            <div class="d-flex flex-row d-none d-sm-flex">
                @if (appState.LoggedIn)
                {
                    <div class="">Hello <b>@userName</b></div>
                    <a @onclick="Logout" href="">Logout</a>
                }
                else
                {
                    <a href="login">Login</a>
                    <a href="register">Register</a>
                }
            </div>
        </div>

        <article class="content px-4 d-none d-md-block">
            @Body
        </article>

        <article class="content-min px-1 d-md-none">
            @Body
        </article>
    </main>
</div>

@code {
    private string? userName;

    protected override async Task OnInitializedAsync()
    {
        UserTokenVM user = await _localStorage.GetItem<UserTokenVM>("user");
        if (user.Token is not null)
        {
            appState.LoggedIn = true;
        }
    }

    private async void Logout()
    {
        await _localStorage.RemoveItem("user");
        appState.LoggedIn = false;
    }

    private async void ChceckIfLoggedIn()
    {
        UserTokenVM UserTokenVM = await _localStorage.GetItem<UserTokenVM>("user");
        if (UserTokenVM is not null)
        {
            userName = UserTokenVM.Name;
        }
        else
            userName = null;
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        appState.OnChange += ChceckIfLoggedIn;
        appState.OnChange += StateHasChanged;
        nameOfSubpage.OnChange += StateHasChanged;
    }

    void IDisposable.Dispose()
    {
        appState.OnChange -= ChceckIfLoggedIn;
        appState.OnChange -= StateHasChanged;
        nameOfSubpage.OnChange -= StateHasChanged;
    }
}