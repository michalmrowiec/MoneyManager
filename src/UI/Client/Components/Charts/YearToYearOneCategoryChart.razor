@using MoneyManager.Client.ViewModels

<Select @bind-SelectedValue="@_selectedCategory">
    @foreach (var category in Categories)
    {
        <SelectItem Value="category.Id">@category.Name</SelectItem>
    }
</Select>

@foreach (var item in selects)
{
    <SelectItemPosition Years="Years"></SelectItemPosition>
}

<Button Color="Color.Light" Clicked="@(() => {if(selects.Count < MaxAmountOfDataSeries){ selects.Add(new());}})">+</Button>
<Button Color="Color.Light" Clicked="@(() => {if(selects.Count > 1){ selects.RemoveAt(selects.Count - 1);}})">-</Button>

@*<div>
    <Select @bind-SelectedValue="@_selectedYears[item]">
        @foreach (var year in Years)
        {
            <SelectItem Value="year">@year</SelectItem>
        }
    </Select>

    <Button Color="Color.Light" Clicked="@(() => {if(listaAmountow.Count < MaxAmountOfDataSeries){ listaAmountow.Add(listaAmountow.Count);}})">+</Button>
    <Button Color="Color.Light" Clicked="@(() => {if(listaAmountow.Count > 1){ listaAmountow.RemoveAt(listaAmountow.Count - 1);}})">-</Button>
</div>*@

@code {
    [Parameter]
    public int MaxAmountOfDataSeries { get; set; } = 4;

    [Parameter, EditorRequired]
    public List<int> Years { get; set; } = null!;

    [Parameter, EditorRequired]
    public List<CategoryVM> Categories { get; set; } = null!;


    private List<int> _selectedYears = new();
    private int _selectedCategory;
    private int _selectedAmountOdData = 1;
    private List<int> listaAmountow = new List<int>() { 0 };

    private List<SelectItemPosition> selects = new List<SelectItemPosition>() { new SelectItemPosition { } };

    protected override Task OnInitializedAsync()
    {
        _selectedYears = new(MaxAmountOfDataSeries);
        return base.OnInitializedAsync();
    }
}