@page "/register"
@using BlazorApp.Server.Services
@using BlazorApp1.Shared
@using Newtonsoft.Json
@inject HttpClient http;
@inject NavigationManager navigationManager;

<div class="col-md-6 offset-md-3 mt-5">
    <div class="alert alert-info">
        Username: test<br />
        Password: test
    </div>
    <div class="card">
        <h4 class="card-header">Blazor WebAssembly JWT Login Example</h4>
        <div class="card-body">
            <EditForm Model="@registerUserDto" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label>Username</label>
                    <InputText @bind-Value="registerUserDto.Name" class="form-control" />
                    <ValidationMessage For="@(() => registerUserDto.Name)" />
                </div>
                <div class="form-group">
                    <label>Email</label>
                    <InputText @bind-Value="registerUserDto.Email" class="form-control" />
                    <ValidationMessage For="@(() => registerUserDto.Email)" />
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <InputText @bind-Value="registerUserDto.Password" type="password" class="form-control" />
                    <ValidationMessage For="@(() => registerUserDto.Password)" />
                </div>
                <div class="form-group">
                    <label>Repeat password</label>
                    <InputText @bind-Value="registerUserDto.RepeatPassword" type="password" class="form-control" />
                    <ValidationMessage For="@(() => registerUserDto.RepeatPassword)" />
                </div>
                <button class="btn btn-primary">
                    @if (loading)
                    {
                        <span class="spinner-border spinner-border-sm mr-1"></span>
                    }
                    Register
                </button>
                @if (!string.IsNullOrEmpty(error))
                {
                    <div class="alert alert-danger mt-3 mb-0">@error</div>
                }
            </EditForm>
        </div>
    </div>
</div>

@code {
    private RegisterUserDto registerUserDto = new RegisterUserDto();
    private bool loading;
    private string error;

    protected override void OnInitialized()
    {
        // redirect to home if already logged in

    }

    private async void HandleValidSubmit()
    {
        loading = true;
        try
        {
            var result = await http.PostAsJsonAsync("api/account/register", registerUserDto);

            if (result.StatusCode == System.Net.HttpStatusCode.OK)
                navigationManager.NavigateTo("login");
            else
            {
                error = await result.Content.ReadAsStringAsync();
                loading = false;
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            error = ex.Message;
            loading = false;
            StateHasChanged();
        }
    }
}